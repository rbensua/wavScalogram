vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = NULL
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
ggtitle("WSI for some") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
ggtitle("WSI for some") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 12)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
svg(filename = "~/ownCloudUV/wavelets/JSS_2019/elmar3.svg", width = 16, height = 6)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
dev.off()
pdf(filename = "~/ownCloudUV/wavelets/JSS_2019/elmar3.pdf", width = 16, height = 6)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
dev.off()
?pdf
pdf(file = "~/ownCloudUV/wavelets/JSS_2019/elmar3.pdf", width = 16, height = 6)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 2)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 2)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 2)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 2)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
dev.off()
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 3)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 3)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 3)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 3)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI Average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
dev.off()
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 3)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 3)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 3)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 3)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI Average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
pdf(file = "~/ownCloudUV/wavelets/JSS_2019/elmar3.pdf", width = 16, height = 6)
par(mfrow = c(1,2))
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
plot.new()
vps <- baseViewports()
pushViewport(vps$figure)
vp1 <- plotViewport(c(1.8,1,1,1))
a_ggplot <-   ggplot(df, aes(x = Time)) +
geom_line(aes(y = s1_1))  +
geom_line(aes(y = s1_2), lty = 3)  +
geom_line(aes(y = s2_1))  +
geom_line(aes(y = s2_2), lty = 3)  +
geom_line(aes(y = s4_1))  +
geom_line(aes(y = s4_2), lty = 3)  +
geom_line(aes(y = s8_1))  +
geom_line(aes(y = s8_2), lty = 3)  +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 14)) +
ylab("WSI Average") +
annotate("text",x = c(70,70,70,70), y = c(.22,.3,.37,.48),
label =  c(expression(paste(s[1],"= ",8)),
expression(paste(s[1],"= ",4)),
expression(paste(s[1],"= ",2)),
expression(paste(s[1],"= ",1))
)
)
print(a_ggplot, vp = vp1)
dev.off()
png(filename = "~/ownCloudUV/wavelets/JSS_2019/elmar4.png", width = 8, height = 6, units = "in", res = 300)
wavPlot(
Z = A,
X = tcentral,
Y = s1,
Ylog = TRUE,
coi = coi,
Xname = "Time",
Yname = expression('s'[1]),
Zname = "WSI Average"
)
dev.off()
library(wavScalogram)
citation("wavScalogram")
help("seq")
seq(from = 0, by = 0.5, length.out = 10)
3*NULL
library(wavScalogram)
windowed_scale_index(sin(1:1000))
wsc <- windowed_scalogram(sin(1:1000))
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale)
View(wsc)
library(wavScalogram)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale)
View(wsc)
library(wavScalogram)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales)
library(wavScalogram)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales)
library(wavScalogram)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, powerscales = FALSE)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, powerscales = FALSE, wsc_coi = wsc$coi_maxscale)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale, figureperiod = FALSE)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale, figureperiod = FALSE, s1 = pow2scales(2, 128, 24))
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale, figureperiod = FALSE, s1 = pow2scales(c(2, 128, 24)))
library(wavScalogram)
wsc <- windowed_scalogram(sin(1:1000))
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale, powerscales = FALSE)
wsi <- windowed_scale_index(sin(1:1000), powerscales = FALSE)
library(wavScalogram)
wsc <- windowed_scalogram(sin(1:1000))
wsi <- windowed_scale_index(wsc = wsc$wsc, wsc_coi = wsc$coi_maxscale, scales = wsc$scales)
wsi <- windowed_scale_index(wsc = wsc$wsc, wsc_coi = wsc$coi_maxscale, scales = wsc$scales, powerscales = FALSE)
library(wavScalogram)
library(wavScalogram)
library(wavScalogram)
wsc <- windowed_scalogram(sin(1:1000))
wsi <- windowed_scale_index(sin(1:1000))
wsi <- windowed_scale_index(wsc = wsc$wsc)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale, time_values = wsc$tcentral)
library(wavScalogram)
wsi <- windowed_scale_index(wsc = wsc$wsc, scales = wsc$scales, wsc_coi = wsc$coi_maxscale, time_values = wsc$tcentral)
wsi2 <- windowed_scale_index(sin(1:1000), scales = wsc$scales)
library(wavScalogram)
kk <- windowed_scalogram(sin(1:1000), scales = pow2scales(c(2, 128, 16)))
kk <- windowed_scalogram(sin(1:1000), scales = pow2scales(c(2, 128, 16)), figureperiod = FALSE)
kk <- windowed_scalogram(sin(1:1000), scales = seq(2, 128), powerscales = FALSE, figureperiod = FALSE)
library(wavScalogram)
si <- scale_index(sin(1:1000))
max(c(1,2,4,3,2,6,8))
library(wavScalogram)
kk <- scale_index(sin(1:1000))
kk <- scale_index(sin(1:1000), scales = pow2scales(c(2,128,16)))
kksc <- scalogram(sin(1:1000))
kk2 <- scale_index(scalogram = kksc$scalogram, scales = kksc$scales)
kk2 <- scale_index(scalog = kksc$scalog, scales = kksc$scales)
library(wavScalogram)
3+NULL
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, makefigure = FALSE)
sc_noise_mean <- sc_noise
for (i in 1:99) {
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, makefigure = FALSE)
sc_noise_mean <- sc_noise_mean + sc_noise
}
sc_noise_mean <- sc_noise_mean / 100
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, makefigure = FALSE)
sc_noise_mean <- sc_noise$scalog
for (i in 1:99) {
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, makefigure = FALSE)
sc_noise_mean <- sc_noise_mean + sc_noise$scalog
}
sc_noise_mean <- sc_noise_mean / 100
plot(sc_noise_mean)
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, energy_density = FALSE, makefigure = FALSE)
sc_noise_mean <- sc_noise$scalog
for (i in 1:99) {
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, energy_density = FALSE, makefigure = FALSE)
sc_noise_mean <- sc_noise_mean + sc_noise$scalog
}
sc_noise_mean <- sc_noise_mean / 100
plot(sc_noise_mean)
X <- sc_noise$scales
plot(log2(X), sc_noise_mean, type = "l", xlab = "Scale", ylab = "Scalogram",
main = "Scalogram", xaxt = "n")
axis(side = 1, at = floor(log2(X)), labels = 2^(floor(log2(X))))
X <- sc_noise$scales
plot(log2(X), sc_noise_mean, type = "l", xlab = "Scale", ylab = "Scalogram Average",
main = "Scalogram Average", xaxt = "n")
axis(side = 1, at = floor(log2(X)), labels = 2^(floor(log2(X))))
si_noise_mean <- scale_index(scalog = sc_noise_mean, scales = X)
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, energy_density = FALSE, makefigure = FALSE)
sc_noise_mean <- sc_noise$scalog
nr <- 1000
for (i in 1:(nr-1)) {
signal_noise <- rnorm(n = 1000, mean = 0, sd = 1)
sc_noise <- scalogram(signal = signal_noise, energy_density = FALSE, makefigure = FALSE)
sc_noise_mean <- sc_noise_mean + sc_noise$scalog
}
sc_noise_mean <- sc_noise_mean / 100
X <- sc_noise$scales
plot(log2(X), sc_noise_mean, type = "l", xlab = "Scale", ylab = "Scalogram Average",
main = "Scalogram Average", xaxt = "n")
axis(side = 1, at = floor(log2(X)), labels = 2^(floor(log2(X))))
si_noise_mean <- scale_index(scalog = sc_noise_mean, scales = X)
