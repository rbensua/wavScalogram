% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wsd_old.R
\name{wsd_old}
\alias{wsd_old}
\title{Windowed Scalogram Difference}
\usage{
wsd(signal1, signal2, scaleparam = NULL, delta_t = NULL, windowrad = NULL, rdist = NULL, normalize = TRUE,
wname = c("MORLET", "HAAR"), border.effects = c("BE","INNER", "PER","SYM"), mc_nrand = NULL, compensated = TRUE,
commutative = TRUE, energy_density = TRUE, parallel = FALSE, makefigure = TRUE)
}
\arguments{
\item{signal1}{A vector containing the first signal.}

\item{signal2}{A vector containing the second signal (its length should be equal to that of \code{signal1})}

\item{scaleparam}{A vector of three elements with the minimum scale, the maximum scale and the number
of suboctaves per octave for constructing power 2 scales (following Torrence and Compo 1998),
measured in units of time.}

\item{delta_t}{Numeric. Increment of time for the construction of windows central times.}

\item{windowrad}{Numeric. Time radius for the windows.}

\item{rdist}{Numeric. Log-scale radius for the windows measured in suboctaves.}

\item{normalize}{Logical. Set to TRUE if the signals use different units.}

\item{wname}{A string, equal to 'MORLET' or 'HAAR'.}

\item{mc_nrand}{Integer. Number of Monte Carlo simulations to be performed in order to determine the 95\% significance contours.}

\item{compensated}{Logical. For preventing numerical errors in the computation of relative distances.}

\item{commutative}{Logical. If TRUE (default) the commutative windowed scalogram difference. Otherwise a non-commutative (but simpler) version is computed
(see AMC 2017).}

\item{energy_density}{Logical. Divide the scalograms by sqrt(scales) for convert them into
energy density (defaults to TRUE).}

\item{parallel}{Logical. If TRUE (default) uses function \code{parApply} from package \code{parallel} for the Monte Carlo simulations.
When FALSE is uses the normal \code{apply} function.}

\item{makefigure}{Logical. Plots a figure with the WSD}

\item{boder.effects}{String, equal to "BE", "INNER", "PER" or "SYM",
which indicates how to manage the border effects which arise usually when a convolution is
performed on finite-lenght signals.
\itemize{
\item "BE": With border effects, padding time series with zeroes.
\item "INNER": Normalized inner scalogram with security margin adapted for each different scale.
\item "PER": With border effects, using boundary wavelets (periodization of the
original time series). Recommended for "short" series.
\item "SYM": With border effects, using a symmetric catenation of the original time
series. Also recommended for "short" series.
}}
}
\value{
A list of a matrix of size \code{length(scales)}x\code{length(tcentral)} containing
the values of the windowed scalograms at each scale and at each time window, a vector
of length \code{length(scales)} containing the scales, and a vector of length \code{length(tcentral)}
containing the values of the maxim scale from which there are border effects for the respective
windowed scalogram.
}
\description{
This function computes the Windowed Scalogram Diference of two signals. The definition and details
can be found in (Bolos et. al, AMC 2017)
}
\section{References}{

C. Torrence, G. P. Compo. A practical guide to wavelet analysis. B. Am. Meteorol. Soc.
79 (1998), 61–78.

V. J. Bolós, R. Benítez, R. Ferrer, R. Jammazi. The windowed scalogram difference: a novel wavelet tool for comparing time series.
Appl. Math. Comput., 312 (2017), 49-65.
}

\examples{
nrand <- 10  # MonteCarlo
windowrad <- 50
rdist <- 5 # Scale radius for distance (height)
nt <- 1500
t <- 1:nt
sd_noise <-  0.2 #\% In the paper Figure 1, sd_noise = 1
signal1 <- rnorm(n = nt, mean = 0, sd = sd_noise)+sin((1:nt)/10)
signal2 <- rnorm(n = nt, mean = 0, sd = sd_noise)+sin((1:nt)/10)
signal2[500:1000] = signal2[500:1000]+sin((500:1000)/2)

waverad <- 3 # For Morlet
s0 <- 2
smax <- (nt-1-2*windowrad)/(2*waverad)
Dj <- 12
scaleparam <- c(s0, smax, Dj)
\dontrun{
wsd <-wsd(signal1 = signal1, signal2 = signal2, scaleparam = scaleparam, delta_t = 10,
       windowrad = windowrad, rdist = rdist, mc_nrand = nrand,
       wname = "MORLET", makefigure =  TRUE)
}
}
