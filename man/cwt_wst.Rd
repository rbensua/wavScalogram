% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cwt_wst.R
\name{cwt_wst}
\alias{cwt_wst}
\title{Continuous wavelet transform}
\usage{
cwt_wst(scales,
               signal,
               wname = c("MORLET", "DOG", "PAUL", "HAAR", "HAAR2"),
               wparam = NULL)
}
\arguments{
\item{scales}{A vector with the wavelet scales.}

\item{signal}{A vector containing the sigal whose wavelet transform is wanted.}

\item{wname}{A string, equal to "MORLET", "DOG", "PAUL", "HAAR" or "HAAR2". The
difference between "HAAR" and "HAAR2" is that "HAAR2" is more accurate but slower.}

\item{wparam}{The corresponding nondimensional parameter for the wavelet function.}
}
\value{
A matrix of size length(signal) x length(scales),
containing the CWT coefficients of the signal.
}
\description{
This function computes the continuous wavelet transform for some families of wavelet
bases: "MORLET", "DOG", "PAUL" and "HAAR".
It is a translation from the Matlab(R) function published by Torrence and Compo
(Torrence & Compo, 1998).
}
\section{References}{


C. Torrence, G. P. Compo. A practical guide to wavelet analysis. B. Am. Meteorol. Soc.
79 (1998), 61â€“78.
}

\examples{
t <- 0:1000
nt <- length(t)
signal <- sin(2 * pi * t / 100) * (t <= 500) + 2 * cos(20 * pi * t / 100) * (t > 500)
plot(t, signal, type = "l")
dt <- 1
# Defining the scales (Torrence and Compo's way)
s0 <- 2 * dt
Dj <- 8
waverad <- 3 # Morlet wavelet radius
J <- log2((t[nt] - t[1] - 2) / (2 * s0 * dt))
scales <- s0 * 2 ^ ((0:(J * Dj)) / Dj)
cwt <- cwt_wst(scales = scales, signal = signal, wname = "MORLET")
\dontrun{
par(mfrow = c(2, 1))
plot(t, signal, type = "l")
image(t, log2(scales), abs(t(cwt)), ylim = rev(range(log2(scales))))
}

}
