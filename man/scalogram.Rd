% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scalogram.R
\name{scalogram}
\alias{scalogram}
\title{Scalogram of a signal}
\usage{
scalogram(signal,
                 scales = NULL,
                 powerscales = TRUE,
                 wname = c("MORLET", "DOG", "PAUL", "HAAR", "HAAR2"),
                 wparam = NULL,
                 border_effects = c("BE", "INNER", "PER", "SYM"),
                 energy_density = TRUE,
                 makefigure = FALSE)
}
\arguments{
\item{signal}{A vector containing the signal whose wavelet transform is wanted. The
unit of time is taken as the time difference between two consecutive data.}

\item{scales}{A vector with the wavelet scales measured in units of time. This can be
either a vector with all the scales, or (if \code{powerscales = TRUE}) following
Torrence and Compo 1998, a vector of three elements with the minimum scale, the maximum
scale and the number of suboctaves per octave.}

\item{powerscales}{Logical. Construct power 2 scales.}

\item{wname}{A string, equal to "MORLET", "DOG", "PAUL", "HAAR" or "HAAR2". The
difference between "HAAR" and "HAAR2" is that "HAAR2" is more accurate but slower.}

\item{wparam}{Numeric. Parameters of the corresponding wavelet.}

\item{border_effects}{String, equal to "BE", "INNER", "PER" or "SYM",
which indicates how to manage the border effects which arise usually when a convolution
is performed on finite-lenght signals.
\itemize{
\item "BE": With border effects, padding time series with zeroes.
\item "INNER": Normalized inner scalogram with security margin adapted for each
    different scale.
\item "PER": With border effects, using boundary wavelets (periodization of the
original time series).
\item "SYM": With border effects, using a symmetric catenation of the original time
series.
}}

\item{energy_density}{Logical. Divide the scalogram by sqrt(scales) for convert it into
energy density (defaults to TRUE).}

\item{makefigure}{Logical. Plots a figure with the scalogram.}
}
\value{
A list with the following fields:

\code{scalog}: A vector of length \code{length(scales)}, containing the values of the
scalogram at each scale.

\code{scales}: The vector of scales.
}
\description{
This function computes the normalized scalogram of a signal for the scales
given. It is important to note that the notion of scalogram here is analogous
to the spectrum of the Fourier transform. It gives the contribution of each scale to
the total energy of the signal. For each scale \eqn{s}, it is defined as the square
root of the integral of the squared modulus of the wavelet transform w.r.t the time
variable \eqn{t}, i.e.

  \deqn{S(s):= (\int_{-\infty}^{+\infty}|Wf(t,s)|^2 dt)^{1/2}.}{%
  S(s):=(integral_{-\infty}^{+\infty}|Wf(t,s)|^2 dt)^{1/2}.}

"Normalized" means that the scalogram is divided by the square root of the number of
times, for comparison purposes between different values of the parameter
\code{border_effects}.
}
\section{References}{


C. Torrence, G. P. Compo. A practical guide to wavelet analysis. B. Am. Meteorol. Soc.
79 (1998), 61–78.

V. J. Bolós, R. Benítez, R. Ferrer, R. Jammazi. The windowed scalogram difference: a
novel wavelet tool for comparing time series. Appl. Math. Comput., 312 (2017), 49-65.
}

\examples{
time <- 1:500
signal <- c(sin(pi * time / 8), sin(pi * time / 16))
scalog <- scalogram(signal = signal, border_effects = "INNER", makefigure = TRUE)

}
